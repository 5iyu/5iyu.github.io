<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo加密1</title>
    <url>/2024/06/06/password/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="b9af5517e1cd742f8ee64b43dd62a81621045b3e86ad1ba7a45cf7a5bc76a429">165d50f05814027fb7fe5e4ae8a088d881c6d59fa64459ec347ca28d1deb818f9a4248eb62e85dc6f09c85c0b2cbadf883546160d00f555194059aa76905f573b52f229ba97b2cf2fcf9f5923c39aafe</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">嘿，这里需要密码。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>主题</tag>
        <tag>部署</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/06/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>快速部署hexo</title>
    <url>/2024/06/06/%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2hexo/</url>
    <content><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<span id="more"></span>
<h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><p><a href="https://nodejs.org/en/">官网下载</a></p>
<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>安装好hexo后，在命令行中输入<code>hexo -v</code>查看版本号，若出现版本号则说明安装成功。<br>本地安装hexo完成。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<p>基本使用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;postName&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">&quot;pageName&quot;</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，如已占用可修改_config.yml文件port配置）</span></span><br><span class="line">hexo deploy <span class="comment">#将.deploy文件夹部署到GitHub</span></span><br></pre></td></tr></table></figure>
<h2 id="配置站点文件"><a href="#配置站点文件" class="headerlink" title="配置站点文件"></a>配置站点文件</h2><p>url 配置成自己的域名，否则会出现404错误。</p>
<p>配置git同步信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: git@github.com:5iyu/5iyu.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure>
<p>hexo同步需要安装hexo-deployer-git</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>站点修改中文</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">language 后面输入 zh-CN。</span><br></pre></td></tr></table></figure>

<h2 id="配置next主题"><a href="#配置next主题" class="headerlink" title="配置next主题"></a>配置next主题</h2><p>安装主题</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>安装完成后，打开 Hexo 配置文件并将theme变量设置为next</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<p>标签和分类在menu中，需要手动开启</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menu</span><br><span class="line"></span><br><span class="line">切换主题</span><br><span class="line"># Schemes</span><br><span class="line">scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br><span class="line">选择你喜欢的一种样式，去掉前面的 #，其他主题前加上 # 即可</span><br></pre></td></tr></table></figure>
<h2 id="开启分类标签功能"><a href="#开启分类标签功能" class="headerlink" title="开启分类标签功能"></a>开启分类标签功能</h2><p>在source目录中会生成相关的文件，在index.md中添加type: “categories”和type: “tags”，分别对应分类和标签。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page categories</span><br><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>
<p>scaffolds文件夹中修改生成模板</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: md.md</span><br><span class="line">date: 2024-06-06 18:21:40</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h2 id="浏览页面显示当前浏览进度"><a href="#浏览页面显示当前浏览进度" class="headerlink" title="浏览页面显示当前浏览进度"></a>浏览页面显示当前浏览进度</h2><p>打开 themes&#x2F;next&#x2F;_config.yml，搜索关键字 scrollpercent，把 false 改为 true。<br><img src="https://img-blog.csdnimg.cn/20190829154043665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzNDgwMTMzOTM3,size_12,color_FFFFFF,t_70"></p>
<h2 id="开启复制"><a href="#开启复制" class="headerlink" title="开启复制"></a>开启复制</h2><p>搜索 codeblock，找到如下配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">border_radius: 8   # 按钮圆滑度</span><br><span class="line">copy_button:  # 设置是否开启代码块复制按钮</span><br><span class="line">	enable: true</span><br><span class="line">	show_result: true  # 是否显示复制成功信息</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h2><p><a href="https://github.com/D0n9X1n/hexo-blog-encrypt">插件地址</a><br>安装插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-blog-encrypt</span><br></pre></td></tr></table></figure>
<p>在主题文件_config.yml中启用插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 文章加密 hexo-blog-encrypt</span><br><span class="line"># Security</span><br><span class="line">encrypt: # hexo-blog-encrypt</span><br><span class="line">  abstract: 这是加密的东西，继续阅读需要密码。</span><br><span class="line">  message: 嘿，这里需要密码。</span><br><span class="line">  tags:</span><br><span class="line">  - &#123;name: encryptAsDiary, password: passwordA&#125;</span><br><span class="line">  - &#123;name: encryptAsTips, password: passwordB&#125;</span><br><span class="line">  wrong_pass_message: Oh, this is an invalid password. Check and try again, please.</span><br><span class="line">  wrong_hash_message: Oh, these decrypted content cannot be verified, but you can still have a look.</span><br></pre></td></tr></table></figure>
<p>文章添加加密标签，例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo加密1</span><br><span class="line">date: 2024-06-06 18:21:40</span><br><span class="line">categories: hexo</span><br><span class="line">tags:</span><br><span class="line">- 主题</span><br><span class="line">- 部署</span><br><span class="line">- hexo</span><br><span class="line">password: 123 </span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h2 id="开启本地搜索"><a href="#开启本地搜索" class="headerlink" title="开启本地搜索"></a>开启本地搜索</h2><p>安装插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>在主题文件_config.yml中启用插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure>
<p>本地不是基本完成</p>
<h2 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h2><ol>
<li>新建一个仓库，名字为：github用户名.github.io</li>
<li>配置git公钥上传到github的setting -&gt; ssh中</li>
<li>hexo g -d 编译静态网页并上传到github仓库</li>
<li>设置github仓库的setting -&gt; github pages -&gt; source 选择 master branch</li>
<li>访问github用户名.github.io</li>
</ol>
<p>首次使用git需要配置用户名和邮箱</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;username&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;&lt;EMAIL&gt;&quot;</span></span><br></pre></td></tr></table></figure>
<p>生成ssh公钥，在命令行中输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;&lt;EMAIL&gt;&quot;</span></span><br></pre></td></tr></table></figure>
<p>在.ssh文件夹中生成id_rsa和id_rsa.pub文件，将id_rsa.pub文件内容复制到github setting -&gt;<br>电脑路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator\.ssh</span><br></pre></td></tr></table></figure>
<p>将生成的id_rsa.pub文件内容复制到github setting -&gt; ssh中</p>
<h2 id="备份hexo源码"><a href="#备份hexo源码" class="headerlink" title="备份hexo源码"></a>备份hexo源码</h2><p>通过git分支的方式备份，使用那个备份插件上传的还是静态网页。</p>
<ol>
<li><p>首先把github仓库克隆到本地，复制.git文件夹到hexo根目录</p>
</li>
<li><p>创建.gitignore文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># .gitignore</span><br><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.git*/</span><br><span class="line"># 这里只备份主题的配置文件</span><br><span class="line">.vscode/</span><br></pre></td></tr></table></figure></li>
<li><p>创建分支</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git branch -a</span><br><span class="line"><span class="comment"># 查看所有分支</span></span><br><span class="line"></span><br><span class="line">git branch </span><br><span class="line"><span class="comment"># 查看当前使用分支</span></span><br><span class="line"></span><br><span class="line">git branch -b hexo-backup</span><br><span class="line"><span class="comment"># 切换到 hexo_backup 分支上，若不存在则创建该分支并切换到该分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># git branch -d hexo_backup</span></span><br><span class="line"><span class="comment"># 删除本地 hexo_backup 分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># git push origin --delete hexo_backup</span></span><br><span class="line"><span class="comment"># 删除远程 hexo_backup 分支</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="提交备份"><a href="#提交备份" class="headerlink" title="提交备份"></a>提交备份</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line"># 添加当前目录</span><br><span class="line"></span><br><span class="line">git commit -m &quot;backup&quot;</span><br><span class="line"># 添加commit，引号内的内容随意</span><br><span class="line"></span><br><span class="line"># 添加远程源</span><br><span class="line">git remote add origin &lt;EMAIL&gt;:5iyu/5iyu.github.io.git</span><br><span class="line"></span><br><span class="line"># 切换远程源</span><br><span class="line">git remote set-url origin &lt;EMAIL&gt;:5iyu/5iyu.github.io.git</span><br><span class="line"></span><br><span class="line">git push origin hexo_backup</span><br><span class="line"># 将本地数据推送到 hexo_backup 分支中</span><br></pre></td></tr></table></figure>
<p>备份完成</p>
<h2 id="恢复备份"><a href="#恢复备份" class="headerlink" title="恢复备份"></a>恢复备份</h2><p>新环境配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>克隆备份分支<br>将原来的source, package.json等文件克隆到hexo根目录下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone -b hexo_backup git@github.com:[username]/[username].github.io.git</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>渲染与推送</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure>
<p>主分支利用hexo自身集成的git组件进行推送。</p>
<p>网络教程很多，但是很多都是有问题的，这里记录一下正确的步骤。</p>
<p>使用·<code>hexo g -d</code>同步到github总是有点问题，多同步几次就好了。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>主题</tag>
        <tag>部署</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>dockr封禁</title>
    <url>/2024/06/07/dock%E5%85%A8%E5%9F%9F%E5%B0%81%E9%94%81/</url>
    <content><![CDATA[<p>国内多个镜像源站下架docker镜像。<br><a href="https://imgse.com/i/pktnd5d"><img src="https://s21.ax1x.com/2024/06/07/pktnd5d.png" alt="pktnd5d.png"></a></p>
<p>本来对docker操作还不是很熟悉，现在直接没得玩了，看了一些帖子使用代理也拉取不下来。使用代理应该是没问题的。</p>
<p>现在docker本来就对匿名用户有拉取次数限制，现在大家推荐的是自建仓库，搞得好麻烦。</p>
]]></content>
      <categories>
        <category>新闻</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>镜像源</tag>
      </tags>
  </entry>
  <entry>
    <title>图床解决方案</title>
    <url>/2024/06/07/%E5%9B%BE%E5%BA%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<p>sm.ms有5g的免费空间，路过图床也不错，但是上传麻烦。</p>
<span id="more"></span>
<p>配置项</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;token&quot;: &quot;&quot;, // 通过SMMS后台获取的api token值</span><br><span class="line">  &quot;backupDomain&quot;: &quot;&quot; // v2.3.1 支持备用上传域名，可选。推荐 smms.app</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2024/06/07/QVi9cu6W5xHSvIs.png"></p>
<p>目前可用的解决方案就是它了，picgo搭配typora使用很方便，直接复制到文章就可以实现自动上传了。</p>
<p>hexo使用vscode更方便一点</p>
<ol>
<li>安装插件</li>
<li>配置插件sm.ms的key</li>
<li>快捷键ctrl+alt+u上传图片<br>插件都是英文的说明，一点都看不懂。</li>
</ol>
<p><img src="https://s2.loli.net/2024/06/07/GZnhxutpEq16i4Y.png" alt="20240607184508"><br>ok，大功告成。</p>
<p>没有代理是上传不了的，这个也不是很好的样子。<br>有点问题，用了代理还是上传不了，难以理解。</p>
]]></content>
      <categories>
        <category>图床</category>
      </categories>
      <tags>
        <tag>sm.ms</tag>
        <tag>picgo</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>npm下载源管理工具nrm</title>
    <url>/2024/06/07/npm%E4%B8%8B%E8%BD%BD%E6%BA%90%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7nrm/</url>
    <content><![CDATA[<p>nrm 是一个 npm 包，可以切换 npm 的源地址。</p>
<span id="more"></span>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g nrm</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nrm <span class="built_in">ls</span> <span class="comment"># 查看所有源</span></span><br><span class="line">nrm use taobao <span class="comment"># 切换源</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>镜像源</tag>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>python版本管理工具pyenv</title>
    <url>/2024/06/07/python%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7pyenv/</url>
    <content><![CDATA[<p>pyenv是python版本管理工具，可以安装多个版本的python，并可以切换版本。</p>
<span id="more"></span>
<p><a href="https://blog.csdn.net/2301_82000445/article/details/135767677">csdn教程满详细的</a></p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>版本管理</tag>
        <tag>python</tag>
        <tag>工具</tag>
        <tag>pyenv</tag>
      </tags>
  </entry>
  <entry>
    <title>node版本管理工具nvm-windows</title>
    <url>/2024/06/07/node%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p>nvm版本管理工具是提供给Linux和Mac，windows下可以使用nvm-windows,nvm-windows是windows下的版本管理工具，nvm-windows安装后，在命令行中输入<code>nvm</code>，即可查看</p>
<span id="more"></span>
<h2 id="安装nvm-windows"><a href="#安装nvm-windows" class="headerlink" title="安装nvm-windows"></a>安装nvm-windows</h2><p><a href="https://github.com/coreybutler/nvm-windows">nvm-windows</a><br>使用命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nvm list available <span class="comment">#查看可用的版本</span></span><br><span class="line">nvm install 12.18.3 <span class="comment">#安装指定版本</span></span><br><span class="line">nvm use 12.18.3 <span class="comment">#使用指定版本</span></span><br><span class="line">nvm list <span class="comment">#查看版本列表</span></span><br><span class="line">nvm uninstall 12.18.3 <span class="comment">#卸载指定版本</span></span><br></pre></td></tr></table></figure>
<p>ok，安装完成<br>还有很多版本管理工具，能用就行了。</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>版本管理</tag>
        <tag>工具</tag>
        <tag>node版本管理</tag>
        <tag>win10</tag>
      </tags>
  </entry>
  <entry>
    <title>windows10jdk快速配置</title>
    <url>/2024/06/07/windows10jdk%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>java的jdk常用版本不多，但是切换比较麻烦。这里使用变量的方式进行配置。</p>
<span id="more"></span>
<h2 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h2><p>下载jdk，安装。<br>jdk可以到镜像站下载，</p>
<p>未完待续。。。</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>版本管理</tag>
        <tag>开发环境</tag>
        <tag>jdk</tag>
      </tags>
  </entry>
  <entry>
    <title>IntelliJ IDEA 2023-2快速配置</title>
    <url>/2024/06/07/2023-2%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>IntelliJ IDEA 激活及配置整理</p>
<span id="more"></span>
<p>未完待续</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>开发环境</tag>
        <tag>开发工具</tag>
        <tag>java</tag>
        <tag>idea</tag>
      </tags>
  </entry>
  <entry>
    <title>warp cloudflare连接不上了</title>
    <url>/2024/06/07/cloudflare%E8%BF%9E%E6%8E%A5%E4%B8%8D%E4%B8%8A%E4%BA%86/</url>
    <content><![CDATA[<p>以前觉得蛮好用的，现在连不上了。</p>
<p>到底是哪里出了问题？</p>
<p>重新登录一下？</p>
<p>安卓的也使用不了，电脑连不上，卸载了。<br><img src="https://s2.loli.net/2024/06/08/KBQWs1mTGhVrDvY.png" alt="20240608000507"></p>
]]></content>
      <categories>
        <category>新闻</category>
      </categories>
      <tags>
        <tag>cloudflare</tag>
      </tags>
  </entry>
  <entry>
    <title>go环境配置</title>
    <url>/2024/06/07/go%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>现在全民转go语言的样子，不如我直接学习go语言。</p>
<span id="more"></span>

<h2 id="安装go语言"><a href="#安装go语言" class="headerlink" title="安装go语言"></a>安装go语言</h2><p><a href="https://golang.org/">go语言官网</a><br><a href="https://studygolang.com/dl">go语言中文网</a><br>一路next即可，安装完成后，在cmd中输入go version查看是否安装成功。</p>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>新版本的go语言，已经不需要配置环境变量了。</p>
<h2 id="vscode配置"><a href="#vscode配置" class="headerlink" title="vscode配置"></a>vscode配置</h2><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><ol>
<li>安装go语言插件</li>
</ol>
<p>暂时使用到这么多。</p>
<p>熟悉完语法就可以进行开发了。只是这个go语法与以往的语法有大区别，需要时间熟悉熟悉。</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>go环境配置</tag>
        <tag>go</tag>
        <tag>vs code</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu快速配置</title>
    <url>/2024/06/08/Ubuntu%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>ubuntu的快速使用配置</p>
<span id="more"></span>

<h2 id="windows关闭Hyper-V"><a href="#windows关闭Hyper-V" class="headerlink" title="windows关闭Hyper-V"></a>windows关闭Hyper-V</h2><p>win不关闭Hyper-V，会导致虚拟机运行卡机。<br>超详细讲解win10 Hyper-V 关闭(禁用)方法<br><a href="https://blog.csdn.net/weixin_46706771/article/details/107991229">https://blog.csdn.net/weixin_46706771&#x2F;article&#x2F;details&#x2F;107991229</a></p>
<h2 id="安装ware"><a href="#安装ware" class="headerlink" title="安装ware"></a>安装ware</h2><p>很多资源站都有</p>
<h2 id="下载Ubuntu镜像"><a href="#下载Ubuntu镜像" class="headerlink" title="下载Ubuntu镜像"></a>下载Ubuntu镜像</h2><p><a href="https://mirror.iscas.ac.cn/ubuntu-releases/23.10/">ISCAS镜像站</a></p>
<h2 id="ware配置镜像启动"><a href="#ware配置镜像启动" class="headerlink" title="ware配置镜像启动"></a>ware配置镜像启动</h2><ol>
<li>选择经典安装</li>
<li>选择 稍后安装操作系统</li>
<li>选择 Linux - ubuntu</li>
<li>最大磁盘空间 100G - 将虚拟磁盘拆分为多个文件</li>
<li>自定义硬件<ul>
<li>内存 4g</li>
<li>网络 桥接</li>
<li>使用ISO镜像文件 - 启动完成切换为使用物理驱动器</li>
<li>处理器默认</li>
<li>取消显示器3D加速</li>
</ul>
</li>
</ol>
<h2 id="Ubuntu启动配置"><a href="#Ubuntu启动配置" class="headerlink" title="Ubuntu启动配置"></a>Ubuntu启动配置</h2><p>[【Linux】Ubuntu23.10+VMWare17虚拟机的安装教程 -  CSDN App]<a href="http://t.csdnimg.cn/thHDl">http://t.csdnimg.cn/thHDl</a></p>
<p>根据此教程选择即可，其实也没什么特别选项。网上的教程很多，但是试错比较麻烦。作者这样子配置，自己配置的时候不一定能行。</p>
<h2 id="使用中文输入"><a href="#使用中文输入" class="headerlink" title="使用中文输入"></a>使用中文输入</h2><p><img src="https://s2.loli.net/2024/06/08/5CXabrDudRhIH8G.png" alt="20240608234545"></p>
<h2 id="切换apt软件源"><a href="#切换apt软件源" class="headerlink" title="切换apt软件源"></a>切换apt软件源</h2><p>方法一：图形界面配置<br>start - 设置 - 软件和更新 - 下载自 - 其它 - 中国 - 选择镜像源 - 关闭 - 更新 - end<br>方法二：命令行配置<br>网上搜索即可<br>方法三：直接修改配置文件<br>同同上</p>
<h2 id="查看ip和路由"><a href="#查看ip和路由" class="headerlink" title="查看ip和路由"></a>查看ip和路由</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br><span class="line">route -n</span><br></pre></td></tr></table></figure>
<p>如果没有安装则：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update -y </span><br><span class="line">sudo apt install net-tools -y </span><br></pre></td></tr></table></figure>

<h2 id="shell远程连接"><a href="#shell远程连接" class="headerlink" title="shell远程连接"></a>shell远程连接</h2><ol>
<li>Ubuntu安装ssh服务<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install openssh-server</span><br></pre></td></tr></table></figure></li>
<li>下载Nxshell客户端<ul>
<li>切换中文语言<br><img src="https://s2.loli.net/2024/06/08/IOiBvy1nqXfKjAU.png" alt="20240608235433"></li>
<li>配置连接信息，配置ip 和登录名密码即可</li>
</ul>
</li>
</ol>
<p>ok，基本配置完成，可以进行使用了。</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>docker不能快乐玩耍了</title>
    <url>/2024/06/09/docker%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>docker镜像被撤后，Ubuntu起步安装docker都成问题。</p>
<span id="more"></span>



]]></content>
      <categories>
        <category>新闻</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker换源使用</title>
    <url>/2024/06/09/docker%E6%8D%A2%E6%BA%90%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>切换docker源就可以拉取了，国内好新人还是多的</p>
<span id="more"></span>
<h2 id="切换docker源"><a href="#切换docker源" class="headerlink" title="切换docker源"></a>切换docker源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>
<p>下面的步骤不执行也能使用<br>重新加载json配合配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure>
<p>重启docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>
<p>以上是网友自建分享的，使用不了多久</p>
<h2 id="使用阿里云转存镜像"><a href="#使用阿里云转存镜像" class="headerlink" title="使用阿里云转存镜像"></a>使用阿里云转存镜像</h2><p>up 技术爬爬虾分享了阿里云转存镜像的教程视频，解决国内无法使用docker的问题</p>
<p>现在全面封锁，阿里估计也上不了什么大分。</p>
<p>暂时能用也是一种有效的解决方案</p>
<h2 id="Ubuntu安装docker"><a href="#Ubuntu安装docker" class="headerlink" title="Ubuntu安装docker"></a>Ubuntu安装docker</h2><p>切换apt源</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ca-certificates curl</span><br><span class="line">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">sudo add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>
<p>测试成功<br><img src="https://s2.loli.net/2024/06/09/i2x7vGRTLhVEUWO.png" alt="20240609204506"></p>
<p>安装如此简单？离线的方式有空再研究一下，现在先这样用着<br><img src="https://s2.loli.net/2024/06/09/NTv91KrCikJRLgB.png" alt="20240609204739"></p>
<h2 id="docker镜像源"><a href="#docker镜像源" class="headerlink" title="docker镜像源"></a>docker镜像源</h2><p>20240609 拉取失败<br>Daocloud</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://registry.daocloud.io/</span><br></pre></td></tr></table></figure>

<p>网友自建</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://registry.moslb.com</span><br></pre></td></tr></table></figure>
<p>拉取超时，没什么用。</p>
<h2 id="试一下转存"><a href="#试一下转存" class="headerlink" title="试一下转存"></a>试一下转存</h2><p>跟着配置没什么问题，可是拉取到我就不行了，每一件事是顺利的。<br><img src="https://s2.loli.net/2024/06/09/sAYXjZItqJaiveU.png" alt="20240609213152"></p>
<p>吓我一跳，多拉几次就成功了。<br>这个镜像是设置公开的。下面实现私有的这么设置。<br><img src="https://s2.loli.net/2024/06/09/5xEdVKlh29Hrnce.png" alt="20240609221500"></p>
<p>私有的也是要哆啦几次才行，后面还加上了版本号，这个版本号不知道重不重要。<br><img src="https://s2.loli.net/2024/06/09/kPdGErv1NBJQAYl.png" alt="20240609222254"></p>
<p>拉跨，本来还以为能够使用了，要么是拉取不下，要么还是拉取不下来。</p>
<p>收工。</p>
<p>一个镜像要拉好久</p>
<p><img src="https://s2.loli.net/2024/06/09/krVShJmYWn5qX6D.png" alt="20240609234628"></p>
<p><a href="https://mirror.baidubce.com/">https://mirror.baidubce.com</a></p>
<p>sudo mkdir -p &#x2F;etc&#x2F;docker<br>sudo tee &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;-‘EOF’<br>{<br>    “registry-mirrors”: [<br>        “<a href="https://docker.m.daocloud.io/">https://docker.m.daocloud.io</a>“<br>    ]<br>}<br>EOF<br>sudo systemctl daemon-reload<br>sudo systemctl restart docker</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>换源</tag>
      </tags>
  </entry>
  <entry>
    <title>如何让VM虚拟机使用宿主机的代理</title>
    <url>/2024/06/09/%E5%A6%82%E4%BD%95%E8%AE%A9VM%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BD%BF%E7%94%A8%E5%AE%BF%E4%B8%BB%E6%9C%BA%E7%9A%84%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<p>想要在VM虚拟机中使用宿主机的代理，具体操作待续。。。需要ip的知识就头大。</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>VMware</tag>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>v2ary分流</title>
    <url>/2024/06/09/v2ary%E5%88%86%E6%B5%81/</url>
    <content><![CDATA[<p>分流通常使用黑白名单的方式，黑名单是指将不能访问的地址使用代理访问，不在名单内的地址则走直连。白名单是指将能访问的地址使用直连，不在名单内的地址则走代理。</p>
<span id="more"></span>
<h2 id="如何配置分流名单"><a href="#如何配置分流名单" class="headerlink" title="如何配置分流名单"></a>如何配置分流名单</h2><p>暂时看不明白这些规则，算了手动开关把。</p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>分流</tag>
      </tags>
  </entry>
  <entry>
    <title>快速实例化服务器</title>
    <url>/2024/06/13/%E5%BF%AB%E9%80%9F%E5%AE%9E%E4%BE%8B%E5%8C%96%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h2 id="解决新服务器无法使用root远程登录"><a href="#解决新服务器无法使用root远程登录" class="headerlink" title="解决新服务器无法使用root远程登录"></a>解决新服务器无法使用root远程登录</h2><p>1 使用内网进入服务器，切换到root用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo su - root</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>修改SSH配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>
<p>将行末的PasswordAuthentication no修改为PasswordAuthentication yes。</p>
<h2 id="root创建用户alex"><a href="#root创建用户alex" class="headerlink" title="root创建用户alex"></a>root创建用户alex</h2><p>adduser alex</p>
<h2 id="授予sudo权限"><a href="#授予sudo权限" class="headerlink" title="授予sudo权限"></a>授予sudo权限</h2><p>分配到 <code>sudo</code>组 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo adduser image sudo</span><br></pre></td></tr></table></figure>
<p>重启生效</p>
<h2 id="安装dockre"><a href="#安装dockre" class="headerlink" title="安装dockre"></a>安装dockre</h2><p>切换apt源</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ca-certificates curl</span><br><span class="line"></span><br><span class="line">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line">sudo add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br><span class="line"></span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>
<h3 id="解决add-apt-repository-command-not-found"><a href="#解决add-apt-repository-command-not-found" class="headerlink" title="解决add-apt-repository: command not found"></a>解决add-apt-repository: command not found</h3><p>add-apt-repository 命令是software-properties-common包的一部分，因此安装这个包就OK了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install software-properties-common</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<h2 id="修改用户密码，注意安全"><a href="#修改用户密码，注意安全" class="headerlink" title="修改用户密码，注意安全"></a>修改用户密码，注意安全</h2><p>root可以在网站修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo passwd username</span><br></pre></td></tr></table></figure>

<h2 id="Ubuntu非root用户添加docker用户组"><a href="#Ubuntu非root用户添加docker用户组" class="headerlink" title="Ubuntu非root用户添加docker用户组"></a>Ubuntu非root用户添加docker用户组</h2><p>安装完docker以后，普通用户使用dockre指令需要sudo提权，这是用为docker需要使用到系统比较底层的资源。因此docker服务本身也是使用root用户运行的。<br>1 验证是否有docker用户组</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gre docker /etc/group</span><br></pre></td></tr></table></figure>

<p>如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alex@iZwz94u15dhankf4ub3nn4Z:~$ grep docker /etc/group</span><br><span class="line">docker:x:998:alex</span><br></pre></td></tr></table></figure>
<p>1.1 如果没用dokcer用户组则创建</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo groupadd docker</span><br></pre></td></tr></table></figure>
<p>2 添加非root用户到docker用户组</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo uaermod -aG docker alex</span><br></pre></td></tr></table></figure>
<h2 id="安装小雅alist"><a href="#安装小雅alist" class="headerlink" title="安装小雅alist"></a>安装小雅alist</h2><p>1 镜像起别名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/jack-images/alist-aria2:latest aria2:latest</span><br></pre></td></tr></table></figure>

<p>一键启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=unless-stopped -v /etc/alist:/opt/alist/data -p 5244:5244 -e PUID=0 -e PGID=0 -e UMASK=022 --name=&quot;alist&quot; xhofe/alist:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>防火墙开放5244端口</p>
<p><a href="http://47.xxx.xxx.10:5244/">http://47.xxx.xxx.10:5244/</a><br>生成admin随机密码<br>C4RSkVGi</p>
<h2 id="挂载阿里云"><a href="#挂载阿里云" class="headerlink" title="挂载阿里云"></a>挂载阿里云</h2><p>1 生成刷新令牌<br>2 选择挂载目录ID</p>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>域名是国外的，服务器是国内的，好奇的是这个是服务器运营商搞的吗。<br><img src="https://s2.loli.net/2024/06/13/hjVloJ7e2cPNZvF.png" alt="20240613003519"><br>拦截原因<br>过第一遍http的时候  80port 通信内容Headers信息里的Host：域名 已被记录</p>
<p>再次访问没有备案直接带这个host返回警告。</p>
]]></content>
      <categories>
        <category>环境部署</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>ubuntu</tag>
        <tag>aliyun</tag>
      </tags>
  </entry>
</search>
